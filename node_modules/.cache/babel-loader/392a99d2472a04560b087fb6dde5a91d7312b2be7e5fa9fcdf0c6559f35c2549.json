{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpetr\\\\SteamPowered-Butterfly\\\\Classroom-Website\\\\src\\\\components\\\\PortfolioContainer.js\";\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport Contact from './pages/Contact';\nimport Footer from '../Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioContainer() {\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {\n    {\n      if (currentPage === 'Home') {\n        return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 14\n        }, this);\n      }\n      if (currentPage === 'About') {\n        return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }, this);\n      }\n      if (currentPage === 'Portfolio') {\n        return /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this);\n    }\n    ;\n    const handlePageChange = page => setCurrentPage(page);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        currentPage: currentPage,\n        handlePageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: renderPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  };\n}\n_c = PortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"names":["React","useState","Header","About","Portfolio","Contact","Footer","jsxDEV","_jsxDEV","PortfolioContainer","renderPage","currentPage","fileName","_jsxFileName","lineNumber","columnNumber","handlePageChange","page","setCurrentPage","children","style","divStyle","_c","$RefreshReg$"],"sources":["C:/Users/kpetr/SteamPowered-Butterfly/Classroom-Website/src/components/PortfolioContainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './Header';\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport Contact from './pages/Contact';\nimport Footer from '../Footer';\n\nexport default function PortfolioContainer() {\n   // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  const renderPage = () => {{\n    if (currentPage === 'Home') {\n      return <About />;\n    }\n    if (currentPage === 'About') {\n      return <About />;\n    }\n    if (currentPage === 'Portfolio') {\n      return <Portfolio />;\n    }\n    return <Contact />\n  };\n\n  const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div>\n      {/* We are passing the currentPage from state and the function to update it */}\n      <Header currentPage={currentPage} handlePageChange={handlePageChange} />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      <div style={divStyle}>\n        {renderPage()}\n      </div>\n      <Footer />\n    </div>\n  );\n  };}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC1C;EACD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IAAC;MACxB,IAAIC,WAAW,KAAK,MAAM,EAAE;QAC1B,oBAAOH,OAAA,CAACL,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClB;MACA,IAAIJ,WAAW,KAAK,OAAO,EAAE;QAC3B,oBAAOH,OAAA,CAACL,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClB;MACA,IAAIJ,WAAW,KAAK,WAAW,EAAE;QAC/B,oBAAOH,OAAA,CAACJ,SAAS;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACtB;MACA,oBAAOP,OAAA,CAACH,OAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACpB;IAAC;IAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAKC,cAAc,CAACD,IAAI,CAAC;IAEvD,oBACET,OAAA;MAAAW,QAAA,gBAEEX,OAAA,CAACN,MAAM;QAACS,WAAW,EAAEA,WAAY;QAACK,gBAAgB,EAAEA;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExEP,OAAA;QAAKY,KAAK,EAAEC,QAAS;QAAAF,QAAA,EAClBT,UAAU,CAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNP,OAAA,CAACF,MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAER,CAAC;AAAC;AAACO,EAAA,GA5BmBb,kBAAkB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}